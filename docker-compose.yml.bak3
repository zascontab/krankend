services:
  krakend:
    image: devopsfaith/krakend:latest
    container_name: wankarlab-krakend
    volumes:
      - ./config:/etc/krakend
    environment:
      - FC_ENABLE=1
      - FC_PARTIALS=/etc/krakend/partials
      - FC_SETTINGS=/etc/krakend/settings
      - KRAKEND_LUA_ENABLED=true
    ports:
      - "7081:8080"
      - "7091:8090"
    command: ["run", "-c", "/etc/krakend/krakend-new.json"]
    restart: unless-stopped
    networks:
      - microservices_network
    depends_on:
      - token-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/__health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  token-service:
    build:
      context: ../services/token-service
      dockerfile: Dockerfile
    container_name: wankarlab-token-service
    ports:
      - "8082:8081"
    environment:
      - TS_KEYCLOAK_CLIENT_ID=otp-service-user
      - TS_KEYCLOAK_CLIENT_SECRET=gO8RVOxmRsVXpR8cEiVDEAXAMmE9eDUW
      - TS_KEYCLOAK_TOKEN_ENDPOINT=http://keycloak:8080/realms/rantipay/protocol/openid-connect/token
      - TS_KEYCLOAK_JWKS_ENDPOINT=http://keycloak:8080/realms/rantipay/protocol/openid-connect/certs
      - TS_KEYCLOAK_SCOPES=openid profile email
      - TS_KEYCLOAK_AUDIENCE=317305190531334149
      - TS_REDIS_HOST=redis
      - TS_REDIS_PORT=6379
      - TS_REDIS_PASSWORD=
      - TS_REDIS_DB=0
      - TOKEN_SERVICE_PORT=8081
      - TOKEN_SERVICE_LOG_LEVEL=debug
    depends_on:
      - redis
    networks:
      - microservices_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  redis:
    image: redis:alpine
    container_name: wankarlab-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - microservices_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  otp-service:
    image: kennethreitz/httpbin
    container_name: wankarlab-otp-service
    ports:
      - "8083:8080"
    command: ["gunicorn", "-b", "0.0.0.0:8080", "httpbin:app"]
    networks:
      - microservices_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/get"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  microservices_network:
    external: true

volumes:
  redis_data: