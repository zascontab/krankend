  951    "service_hosts": {
  952      "iam": "http://localhost:8081",
  953      "ia_service": "http://localhost:8082",
  954      "whatsapp_service": "http://localhost:8083",
  955      "notification_service": "http://localhost:8084"
  956    },
  957    "security": {
  958      "jwk_url": "http://localhost:8081/jwks.json",
  959      "enable_https": false
  960    }
  961  }
  962  EOF
  963  cat > config/partials/security/cors.json << 'EOF'
  964  {
  965    "allow_origins": ["*"],
  966    "allow_methods": ["GET", "POST", "PUT", "DELETE"],
  967    "allow_headers": ["Origin", "Authorization", "Content-Type"],
  968    "expose_headers": ["Content-Length"],
  969    "max_age": 3600
  970  }
  971  EOF
  972  clear
  973  sudo docker compose -f docker-compose.yml down
  974  sudo docker compose -f docker-compose.yml up -d
  975  docker ps
  976  sudo docker compose -f docker-compose.yml down
  977  sudo docker compose -f docker-compose.yml up -d
  978  docker ps
  979  sudo docker compose -f docker-compose.yml down
  980  sudo docker compose -f docker-compose.yml up -d
  981  docker ps
  982  sudo docker compose -f docker-compose.yml down
  983  sudo docker compose -f docker-compose.yml up -d
  984  docker ps
  985  sudo docker compose -f docker-compose.yml down
  986  sudo docker compose -f docker-compose.yml up -d
  987  docker ps
  988  sudo docker compose -f docker-compose.yml down
  989  sudo docker compose -f docker-compose.yml up -d
  990  docker ps
  991  curl -v http://localhost:7081/health
  992  sudo docker compose -f docker-compose.yml down
  993  sudo docker compose -f docker-compose.yml up -d
  994  docker ps
  995  sudo docker compose -f docker-compose.yml down
  996  sudo docker compose -f docker-compose.yml up -d
  997  docker ps
  998  git add 
  999  git add .
 1000  git checkout -b dev"
 1001  git checkout -b dev
 1002  git push -u origin dev
 1003  curl -v http://localhost:7081/health
 1004  git add .
 1005  git commit -m "carga incial"
 1006  git push -u origin dev
 1007  sudo docker compose -f docker-compose.yml down
 1008  sudo docker compose -f docker-compose.yml up -d
 1009  curl -v http://localhost:7081/health
 1010  docker ps
 1011  sudo docker compose -f docker-compose.yml down
 1012  sudo docker compose -f docker-compose.yml up -d
 1013  docker ps
 1014  curl -v http://localhost:7081/health
 1015  sudo docker compose -f docker-compose.yml down
 1016  sudo docker compose -f docker-compose.yml up -d
 1017  docker ps
 1018  curl -v http://localhost:7081/health
 1019  git add .
 1020  git commit -m "docuemnto maestro"
 1021  git push -u origin dev
 1022  curl -v http://localhost:7081/health
 1023  sudo docker compose -f docker-compose.yml down
 1024  sudo docker compose -f docker-compose.yml up -d
 1025  curl -v http://localhost:7081/health
 1026  docker ps
 1027  sudo docker compose -f docker-compose.yml down
 1028  sudo docker compose -f docker-compose.yml up -d
 1029  docker ps
 1030  sudo docker compose -f docker-compose.yml down
 1031  sudo docker compose -f docker-compose.yml up -d
 1032  docker ps
 1033  clear
 1034  docker ps
 1035  curl -v http://localhost:7081/health
 1036  docker ps
 1037  curl -v http://localhost:7081/health
 1038  sudo docker compose -f docker-compose.yml down
 1039  sudo docker compose -f docker-compose.yml up -d
 1040  docker ps
 1041  curl -v http://localhost:7081/health
 1042  sudo docker compose -f docker-compose.yml down
 1043  sudo docker compose -f docker-compose.yml up -d
 1044  docker ps
 1045  curl -v http://localhost:7081/health
 1046  sudo docker compose -f docker-compose.yml down
 1047  sudo docker compose -f docker-compose.yml up -d
 1048  docker ps
 1049  sudo docker compose -f docker-compose.yml down
 1050  sudo docker compose -f docker-compose.yml up -d
 1051  clear
 1052  docker ps
 1053  sudo docker compose -f docker-compose.yml down
 1054  sudo docker compose -f docker-compose.yml up -d
 1055  sudo docker compose -f docker-compose.yml down
 1056  sudo docker compose -f docker-compose.yml up -d
 1057  docker ps
 1058  sudo docker compose -f docker-compose.yml down
 1059  sudo docker compose -f docker-compose.yml up -d
 1060  docker ps
 1061  sudo docker compose -f docker-compose.yml down
 1062  sudo docker compose -f docker-compose.yml up -d
 1063  sudo docker compose -f docker-compose.yml down
 1064  sudo docker compose -f docker-compose.yml up -d
 1065  docker ps
 1066  sudo docker compose -f docker-compose.yml down
 1067  sudo docker compose -f docker-compose.yml up -d
 1068  docker ps
 1069  sudo docker compose -f docker-compose.yml down
 1070  sudo docker compose -f docker-compose.yml up -d
 1071  docker ps
 1072  sudo docker compose -f docker-compose.yml down
 1073  sudo docker compose -f docker-compose.yml up -d
 1074  docker ps
 1075  sudo docker compose -f docker-compose.yml down
 1076  sudo docker compose -f docker-compose.yml up -d
 1077  docker ps
 1078  #!/bin/bash
 1079  set -e
 1080  echo "=== Implementando configuración de seguridad en KrakenD ==="
 1081  # Detener contenedor existente
 1082  echo "Deteniendo contenedor existente..."
 1083  docker-compose down
 1084  sudo docker compose -f docker-compose.yml down
 1085  sudo docker compose -f docker-compose.yml up -d
 1086  docker ps
 1087  #!/bin/bash
 1088  set -e
 1089  echo "=== Script de solución para KrakenD ==="
 1090  # 1. Limpiar todo
 1091  echo -e "\n1. Limpiando todo y empezando de cero"
 1092  docker-compose down
 1093  sudo docker compose -f docker-compose.yml down
 1094  sudo docker compose -f docker-compose.yml up -d
 1095  docker ps
 1096  #!/bin/bash
 1097  set -e
 1098  echo "=== Script de solución para KrakenD ==="
 1099  # 1. Limpiar todo
 1100  echo -e "\n1. Limpiando todo y empezando de cero"
 1101  docker-compose down
 1102  cd ..
 1103  cd incidence_backend/
 1104  code .
 1105  cd ..
 1106  cd botservice/
 1107  code .
 1108  cd ..
 1109  cd incidence_backend/
 1110  ls
 1111  cd whatsapp_server/
 1112  ls
 1113  code .
 1114  cd ..
 1115  cd otp-service/
 1116  go run cmd/server/main.go 
 1117  code .
 1118  go run cmd/server/main.go 
 1119  go run cmd/api/main.go 
 1120  ls
 1121  cd ..
 1122  ls
 1123  clear
 1124  ls
 1125  cd otp-service/
 1126  go run cmd/server/main.go 
 1127  code .
 1128  code .
 1129  sudo docker compose -f docker-compose.yml down
 1130  sudo docker compose -f docker-compose.yml up -d
 1131  docker ps
 1132  sudo docker compose -f docker-compose.yml down
 1133  sudo docker compose -f docker-compose.yml up -d
 1134  docker ps
 1135  curl -v http://localhost:7081/health
 1136  sudo docker compose -f docker-compose.yml down
 1137  sudo docker compose -f docker-compose.yml up -d
 1138  docker ps
 1139  curl -v http://localhost:7081/health
 1140  sudo docker compose restart
 1141  curl -v http://localhost:7081/health
 1142  sudo docker compose -f docker-compose.yml down
 1143  sudo docker compose -f docker-compose.yml up -d
 1144  docker ps
 1145  sudo docker compose restart
 1146  curl -v http://localhost:7081/health
 1147  sudo docker compose -f docker-compose.yml down
 1148  sudo docker compose -f docker-compose.yml up -d
 1149  sudo docker compose restart
 1150  curl -v http://localhost:7081/health
 1151  sudo docker compose -f docker-compose.yml down
 1152  sudo docker compose -f docker-compose.yml up -d
 1153  sudo docker compose restart
 1154  docker ps
 1155  # Después de actualizar config/krakend.json
 1156  docker-compose restart
 1157  curl -v http://localhost:7081/health
 1158  docker-compose restart
 1159  sudo docker compose restart
 1160  curl -v http://localhost:7081/health
 1161  docker ps
 1162  sudo docker compose -f docker-compose.yml down
 1163  sudo docker compose -f docker-compose.yml up -d
 1164  docker ps
 1165  curl -v http://localhost:7081/health
 1166  sudo docker compose -f docker-compose.yml down
 1167  sudo docker compose -f docker-compose.yml up -d
 1168  docker ps
 1169  sudo docker compose restart
 1170  curl -v http://localhost:7081/health
 1171  sudo docker compose -f docker-compose.yml down
 1172  sudo docker compose -f docker-compose.yml up -d
 1173  docker ps
 1174  sudo docker compose restart
 1175  curl -v http://localhost:7081/health
 1176  docker logs krakend-project-krakend-1
 1177  sudo docker compose -f docker-compose.yml down
 1178  sudo docker compose -f docker-compose.yml up -d
 1179  docker ps
 1180  curl -v http://localhost:7081/health
 1181  docker logs krakend-project-krakend-1
 1182  sudo docker compose -f docker-compose.yml down
 1183  sudo docker compose -f docker-compose.yml up -d
 1184  docker ps
 1185  sudo docker compose restart
 1186  curl -v http://localhost:7081/health
 1187  sudo docker compose -f docker-compose.yml down
 1188  sudo docker compose -f docker-compose.yml up -d
 1189  docker ps
 1190  sudo docker compose restart
 1191  curl -v http://localhost:7081/health
 1192  docker logs krakend-project-krakend-1
 1193  sudo docker compose -f docker-compose.yml down
 1194  sudo docker compose -f docker-compose.yml up -d
 1195  docker ps
 1196  curl -v http://localhost:7081/health
 1197  docker logs krakend-project-krakend-1
 1198  sudo docker compose -f docker-compose.yml down
 1199  sudo docker compose -f docker-compose.yml up -d
 1200  docker ps
 1201  sudo docker compose restart
 1202  docker ps
 1203  docker logs krakend-project-krakend-1
 1204  docker ps
 1205  curl -v http://localhost:7081/health
 1206  git add .
 1207  git commit -m "configuracion 2"
 1208  git push -u origin dev
 1209  sudo docker compose -f docker-compose.yml down
 1210  sudo docker compose -f docker-compose.yml up -d
 1211  docker ps
 1212  docker logs krakend-project-krakend-1
 1213  sudo docker compose -f docker-compose.yml down
 1214  sudo docker compose -f docker-compose.yml up -d
 1215  docker ps
 1216  docker logs krakend-project-krakend-1
 1217  sudo docker compose -f docker-compose.yml down
 1218  sudo docker compose -f docker-compose.yml up -d
 1219  docker ps
 1220  docker logs krakend-project-krakend-1
 1221  sudo docker compose -f docker-compose.yml down
 1222  sudo docker compose -f docker-compose.yml up -d
 1223  docker ps
 1224  sudo docker compose restart
 1225  docker logs krakend-project-krakend-1
 1226  sudo docker compose -f docker-compose.yml down
 1227  sudo docker compose -f docker-compose.yml up -d
 1228  docker ps
 1229  sudo docker compose -f docker-compose.yml down
 1230  sudo docker compose -f docker-compose.yml up -d
 1231  docker ps
 1232  sudo docker compose -f docker-compose.yml down
 1233  sudo docker compose -f docker-compose.yml up -d
 1234  docker ps
 1235  docker logs krakend-project-krakend-1
 1236  curl -v http://localhost:7081/health
 1237  cd scripts/
 1238  sh check-config.sh 
 1239  tree
 1240  cd ..
 1241  tree
 1242  sh check-config.sh 
 1243  sh scripts/check-config.sh 
 1244  sudo docker compose -f docker-compose.yml down
 1245  sudo docker compose -f docker-compose.yml up -d
 1246  curl -v http://localhost:7081/health
 1247  sh scripts/deploy.sh
 1248  sh scripts/check-config.sh 
 1249  sh scripts/deploy.sh
 1250  curl -v http://localhost:7081/health
 1251  docker logs krakend-project-krakend-1
 1252  clear
 1253  git add .
 1254  git commit -m "antes de hacer cambio en whatsapp json"
 1255  sudo docker compose -f docker-compose.yml down
 1256  sudo docker compose -f docker-compose.yml up -d
 1257  docker ps
 1258  sh scripts/deploy.sh
 1259  docker logs krakend-project-krakend-1
 1260  tree
 1261  sudo docker compose -f docker-compose.yml down
 1262  sudo docker compose -f docker-compose.yml up -d
 1263  docker ps
 1264  sh scripts/deploy.sh
 1265  docker logs krakend-project-krakend-1
 1266  cd ~/developer/projects/rantipay/ms/krakend-project
 1267  grep -r "service_hosts.whatsapp_service" config/
 1268  git add .
 1269  git commit -m "antes de borrar o modificar whatsapp .json"
 1270  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1271  clear
 1272  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1273  clear
 1274  sudo docker compose -f docker-compose.yml down
 1275  sudo docker compose -f docker-compose.yml up -d
 1276  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1277  docker run --rm -v "$PWD/config:/etc/krakend" -p 7081:8080 -p 7091:8090 devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1278  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1279  clear
 1280  git add .
 1281  git commit -m "trabajandopara enviar mensajes"
 1282  git add .
 1283  clear
 1284  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1285  clear
 1286  sudo docker compose -f docker-compose.yml down
 1287  sudo docker compose -f docker-compose.yml up -d
 1288  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1289  docker logs krakend-project-krakend-1
 1290  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1291  sudo docker compose -f docker-compose.yml down
 1292  sudo docker compose -f docker-compose.yml up -d
 1293  docker ps
 1294  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1295  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend check -d -c /etc/krakend/krakend-fixed.json
 1296  sudo docker compose -f docker-compose.yml down
 1297  sudo docker compose -f docker-compose.yml up -d
 1298  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend check -d -c /etc/krakend/krakend-fixed.json
 1299  sudo docker compose -f docker-compose.yml down
 1300  sudo docker compose -f docker-compose.yml up -d
 1301  docker ps
 1302  claer
 1303  clear
 1304  docker ps
 1305  sudo docker compose -f docker-compose.yml down
 1306  sudo docker compose -f docker-compose.yml up -d
 1307  docker ps
 1308  docker run --rm -v "$PWD/config:/etc/krakend"   devopsfaith/krakend run -c /etc/krakend/krakend-simple.json
 1309  docker ps | grep krakend
 1310  clear
 1311  docker ps | grep krakend
 1312  curl http://localhost:7081/__debug/endpoints
 1313  curl http://localhost:7081/health
 1314  "host": ["http://localhost:8089"]
 1315  docker ps | grep krakend
 1316  clear
 1317  docker exec krakend-project-krakend-1 krakend version
 1318  docker exec krakend-project-krakend-1 cat /etc/krakend/krakend.json
 1319  cat > config/krakend-simple.json << 'EOF'
 1320  {
 1321    "$schema": "https://www.krakend.io/schema/v3.json",
 1322    "version": 3,
 1323    "name": "Microservices API Gateway - Simple",
 1324    "port": 8080,
 1325    "debug_endpoint": true,
 1326    "endpoints": [
 1327      {
 1328        "endpoint": "/health",
 1329        "method": "GET",
 1330        "backend": [
 1331          {
 1332            "url_pattern": "/health",
 1333            "host": ["http://172.17.0.1:8089"],
 1334            "encoding": "no-op"
 1335          }
 1336        ]
 1337      },
 1338      {
 1339        "endpoint": "/api/whatsapp/send-message",
 1340        "method": "POST",
 1341        "backend": [
 1342          {
 1343            "url_pattern": "/send-otp",
 1344            "host": ["http://172.17.0.1:8089"],
 1345            "encoding": "json",
 1346            "method": "POST"
 1347          }
 1348        ]
 1349      }
 1350    ]
 1351  }
 1352  EOF
 1353  cat > docker-compose.yml << 'EOF'
 1354  version: '3'
 1355  services:
 1356    krakend:
 1357      image: devopsfaith/krakend:latest
 1358      volumes:
 1359        - ./config:/etc/krakend
 1360      ports:
 1361        - "7081:8080"
 1362        - "7091:8090"
 1363      command: ["run", "-c", "/etc/krakend/krakend-simple.json"]
 1364      restart: on-failure
 1365  EOF
 1366  sudo docker compose -f docker-compose.yml down
 1367  sudo docker compose -f docker-compose.yml up -d
 1368  docker ps
 1369  clear
 1370  curl -v http://localhost:7081/health
 1371  curl -v http://localhost:7081/__debug/endpoints
 1372  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1373      "phone_number": "+593983606090",
 1374      "user_id": 1,
 1375      "purpose": "login",
 1376      "channel": "whatsapp"
 1377    }'
 1378  sudo docker compose -f docker-compose.yml down
 1379  sudo docker compose -f docker-compose.yml up -d
 1380  sudo docker compose -f docker-compose.yml down
 1381  sudo docker compose -f docker-compose.yml up -d
 1382  docker ps
 1383  cat > docker-compose.yml << 'EOF'
 1384  version: '3'
 1385  services:
 1386    krakend:
 1387      image: devopsfaith/krakend:latest
 1388      volumes:
 1389        - ./config:/etc/krakend
 1390      environment:
 1391        - FC_ENABLE=1
 1392        - FC_SETTINGS=./settings/dev.json
 1393        - FC_PARTIALS=./partials
 1394        - FC_OUT=/tmp/krakend-out.json
 1395      ports:
 1396        - "7081:8080"
 1397        - "7091:8090"
 1398      command: ["run", "-c", "/etc/krakend/krakend-simple.json"]
 1399      restart: on-failure
 1400  EOF
 1401  sudo docker compose -f docker-compose.yml down
 1402  sudo docker compose -f docker-compose.yml up -d
 1403  docker ps
 1404  sudo docker compose -f docker-compose.yml down
 1405  sudo docker compose -f docker-compose.yml up -d
 1406  docker ps
 1407  sudo docker compose -f docker-compose.yml down
 1408  sudo docker compose -f docker-compose.yml up -d
 1409  docker ps
 1410  sudo docker compose -f docker-compose.yml down
 1411  sudo docker compose -f docker-compose.yml up -d
 1412  docker ps
 1413  sudo docker compose -f docker-compose.yml down
 1414  sudo docker compose -f docker-compose.yml up -d
 1415  docker ps
 1416  sudo docker compose -f docker-compose.yml down
 1417  sudo docker compose -f docker-compose.yml up -d
 1418  docker ps
 1419  sudo docker compose -f docker-compose.yml down
 1420  sudo docker compose -f docker-compose.yml up -d
 1421  docker ps
 1422  sudo docker compose -f docker-compose.yml down
 1423  sudo docker compose -f docker-compose.yml up -d
 1424  docker ps
 1425  clear
 1426  docker ps
 1427  sudo docker compose -f docker-compose.yml down
 1428  sudo docker compose -f docker-compose.yml up -d
 1429  docker ps
 1430  sudo docker compose -f docker-compose.yml down
 1431  sudo docker compose -f docker-compose.yml up -d
 1432  docker ps
 1433  clear
 1434  sudo docker compose -f docker-compose.yml down
 1435  sudo docker compose -f docker-compose.yml up -d
 1436  docker ps
 1437  sudo docker compose -f docker-compose.yml down
 1438  sudo docker compose -f docker-compose.yml up -d
 1439  docker ps
 1440  sudo docker compose -f docker-compose.yml down
 1441  sudo docker compose -f docker-compose.yml up -d
 1442  docker ps
 1443  docker run --rm -v "$PWD/config:/etc/krakend"   -e FC_ENABLE=1   -e FC_SETTINGS=/etc/krakend/settings/dev.json   devopsfaith/krakend check -d -c /etc/krakend/krakend-simple.json
 1444  clear
 1445  sudo docker compose -f docker-compose.yml down
 1446  sudo docker compose -f docker-compose.yml up -d
 1447  docker run --rm -v "$PWD/config:/etc/krakend"   -e FC_ENABLE=1   -e FC_SETTINGS=/etc/krakend/settings/dev.json   devopsfaith/krakend check -d -c /etc/krakend/krakend-simple.json
 1448  sudo docker compose -f docker-compose.yml down
 1449  sudo docker compose -f docker-compose.yml up -d
 1450  docker ps
 1451  git add .
 1452  git commit -m "envia mensaje a whatsapp"
 1453  git push -u origin dev
 1454  sudo docker compose -f docker-compose.yml down
 1455  sudo docker compose -f docker-compose.yml up -d
 1456  docker ps
 1457  sudo docker compose -f docker-compose.yml down
 1458  sudo docker compose -f docker-compose.yml up -d
 1459  docker ps
 1460  sudo docker compose -f docker-compose.yml down
 1461  sudo docker compose -f docker-compose.yml up -d
 1462  docker ps
 1463  sudo docker compose -f docker-compose.yml down
 1464  sudo docker compose -f docker-compose.yml up -d
 1465  docker ps
 1466  sudo docker compose -f docker-compose.yml down
 1467  sudo docker compose -f docker-compose.yml up -d
 1468  docker ps
 1469  sudo docker compose -f docker-compose.yml down
 1470  sudo docker compose -f docker-compose.yml up -d
 1471  docker ps
 1472  sudo docker compose -f docker-compose.yml down
 1473  sudo docker compose -f docker-compose.yml up -d
 1474  docker ps
 1475  docker-compose logs krakend
 1476  sudo docker compose logs krakend
 1477  sudo docker compose -f docker-compose.yml down
 1478  sudo docker compose -f docker-compose.yml up -d
 1479  docker ps
 1480  sudo docker compose -f docker-compose.yml down
 1481  sudo docker compose -f docker-compose.yml up -d
 1482  docker ps
 1483  sudo docker compose logs krakend
 1484  sudo docker compose -f docker-compose.yml down
 1485  sudo docker compose -f docker-compose.yml up -d
 1486  docker ps
 1487  clear
 1488  go run cmd/botservice/main.go 
 1489  go run cmd/server/main.go 
 1490  cd src/
 1491  node index.js 
 1492  code .
 1493  cd ..
 1494  ls
 1495  cd iam/
 1496  code .
 1497  sudo apt install netcat  # Si no lo tienes instalado
 1498  echo -e "HTTP/1.1 200 OK\r\nContent-Length: 2\r\n\r\nOK" | nc -l 8086
 1499  cd ..
 1500  code .
 1501  mkdir -p krakend-project/{config/{partials/{endpoints,security,backend},settings,templates},certs,scripts}
 1502  cd krakend-project
 1503  code .
 1504  cat > config/partials/security/jwt.json << 'EOF'
 1505  {
 1506    "alg": "RS256",
 1507    "jwk_url": "{{ .service_hosts.iam }}/jwks.json",
 1508    "cache": true,
 1509    "cache_duration": 3600,
 1510    "disable_jwk_security": {{ if eq .environment "development" }}true{{ else }}false{{ end }},
 1511    "propagate_claims": [
 1512      ["sub", "x-user-id"],
 1513      ["realm_access.roles", "x-user-roles"]
 1514    ]
 1515  }
 1516  EOF
 1517  cat > config/partials/security/rate_limiting.json << 'EOF'
 1518  {
 1519    "max_rate": 100,
 1520    "strategy": "ip",
 1521    "client_max_rate": 10,
 1522    "capacity": 10
 1523  }
 1524  EOF
 1525  cat > config/partials/endpoints/auth.json << 'EOF'
 1526  [
 1527    {
 1528      "endpoint": "/auth/login",
 1529      "method": "POST",
 1530      "backend": [
 1531        {
 1532          "url_pattern": "/api/v1/auth/login",
 1533          "host": ["{{ .service_hosts.iam }}"],
 1534          "encoding": "json",
 1535          "method": "POST"
 1536        }
 1537      ]
 1538    },
 1539    {
 1540      "endpoint": "/auth/refresh",
 1541      "method": "POST",
 1542      "backend": [
 1543        {
 1544          "url_pattern": "/api/v1/auth/refresh",
 1545          "host": ["{{ .service_hosts.iam }}"],
 1546          "encoding": "json",
 1547          "method": "POST"
 1548        }
 1549      ]
 1550    },
 1551    {
 1552      "endpoint": "/user/profile",
 1553      "method": "GET",
 1554      "extra_config": {
 1555        "auth/validator": "@security/jwt.json"
 1556      },
 1557      "backend": [
 1558        {
 1559          "url_pattern": "/api/v1/users/profile",
 1560          "host": ["{{ .service_hosts.iam }}"],
 1561          "encoding": "json"
 1562        }
 1563      ]
 1564    }
 1565  ]
 1566  EOF
 1567  cat > config/partials/endpoints/ia.json << 'EOF'
 1568  [
 1569    {
 1570      "endpoint": "/api/ia/conversation",
 1571      "method": "POST",
 1572      "extra_config": {
 1573        "auth/validator": "@security/jwt.json",
 1574        "qos/ratelimit/router": "@security/rate_limiting.json"
 1575      },
 1576      "backend": [
 1577        {
 1578          "url_pattern": "/api/conversation",
 1579          "host": ["{{ .service_hosts.ia_service }}"],
 1580          "encoding": "json",
 1581          "method": "POST",
 1582          "extra_config": {
 1583            "modifier/martian": {
 1584              "header.Modifier": {
 1585                "scope": ["request"],
 1586                "name": "X-User-ID",
 1587                "value": "{{ .claims.user_id }}"
 1588              }
 1589            }
 1590          }
 1591        }
 1592      ]
 1593    }
 1594  ]
 1595  EOF
 1596  cat > config/partials/endpoints/whatsapp.json << 'EOF'
 1597  [
 1598    {
 1599      "endpoint": "/api/whatsapp/send-otp",
 1600      "method": "POST",
 1601      "extra_config": {
 1602        "auth/validator": "@security/jwt.json"
 1603      },
 1604      "backend": [
 1605        {
 1606          "url_pattern": "/api/otp/generate",
 1607          "host": ["{{ .service_hosts.whatsapp_service }}"],
 1608          "encoding": "json",
 1609          "method": "POST"
 1610        }
 1611      ]
 1612    },
 1613    {
 1614      "endpoint": "/api/whatsapp/verify-otp",
 1615      "method": "POST",
 1616      "backend": [
 1617        {
 1618          "url_pattern": "/api/otp/verify",
 1619          "host": ["{{ .service_hosts.whatsapp_service }}"],
 1620          "encoding": "json",
 1621          "method": "POST"
 1622        }
 1623      ]
 1624    },
 1625    {
 1626      "endpoint": "/api/whatsapp/webhook",
 1627      "method": "POST",
 1628      "backend": [
 1629        {
 1630          "url_pattern": "/api/webhook",
 1631          "host": ["{{ .service_hosts.whatsapp_service }}"],
 1632          "encoding": "json",
 1633          "method": "POST"
 1634        }
 1635      ]
 1636    }
 1637  ]
 1638  EOF
 1639  cat > config/partials/endpoints/notifications.json << 'EOF'
 1640  [
 1641    {
 1642      "endpoint": "/api/notifications/register",
 1643      "method": "POST",
 1644      "extra_config": {
 1645        "auth/validator": "@security/jwt.json"
 1646      },
 1647      "backend": [
 1648        {
 1649          "url_pattern": "/api/device/register",
 1650          "host": ["{{ .service_hosts.notification_service }}"],
 1651          "encoding": "json",
 1652          "method": "POST"
 1653        }
 1654      ]
 1655    },
 1656    {
 1657      "endpoint": "/api/notifications/send",
 1658      "method": "POST",
 1659      "extra_config": {
 1660        "auth/validator": "@security/jwt.json",
 1661        "validation/json-schema": {
 1662          "type": "object",
 1663          "required": ["user_id", "message"],
 1664          "properties": {
 1665            "user_id": {
 1666              "type": "string"
 1667            },
 1668            "message": {
 1669              "type": "string"
 1670            },
 1671            "data": {
 1672              "type": "object"
 1673            }
 1674          }
 1675        }
 1676      },
 1677      "backend": [
 1678        {
 1679          "url_pattern": "/api/push/send",
 1680          "host": ["{{ .service_hosts.notification_service }}"],
 1681          "encoding": "json",
 1682          "method": "POST"
 1683        }
 1684      ]
 1685    }
 1686  ]
 1687  EOF
 1688  cat > scripts/check-config.sh << 'EOF'
 1689  #!/bin/bash
 1690  set -e
 1691  cd "$(dirname "$0")/.."
 1692  echo "Validando configuración de KrakenD..."
 1693  docker run --rm -v "$PWD/config:/etc/krakend" \
 1694    -e FC_ENABLE=1 \
 1695    -e FC_SETTINGS=./settings/dev.json \
 1696    -e FC_PARTIALS=./partials \
 1697    -e FC_OUT=/tmp/krakend-check.json \
 1698    devopsfaith/krakend check -d -c /etc/krakend/krakend.json
 1699  if [ $? -eq 0 ]; then
 1700    echo "✅ Configuración válida"
 1701  else
 1702    echo "❌ Configuración inválida"
 1703    exit 1
 1704  fi
 1705  EOF
 1706  chmod +x scripts/check-config.sh
 1707  cat > scripts/deploy.sh << 'EOF'
 1708  #!/bin/bash
 1709  set -e
 1710  cd "$(dirname "$0")/.."
 1711  ENVIRONMENT=${1:-dev}
 1712  echo "Desplegando KrakenD en entorno: $ENVIRONMENT"
 1713  # Validar configuración
 1714  ./scripts/check-config.sh
 1715  # Iniciar o reiniciar el servicio
 1716  if [ "$ENVIRONMENT" = "dev" ]; then
 1717    docker-compose down || true
 1718    docker-compose up -d
 1719    echo "KrakenD está ejecutándose en http://localhost:8080"
 1720    echo "Panel de métricas disponible en http://localhost:8090"
 1721  else
 1722    echo "Despliegue en entorno $ENVIRONMENT no implementado"
 1723    # Aquí implementaríamos el despliegue en producción o staging
 1724  fi
 1725  EOF
 1726  chmod +x scripts/deploy.sh
 1727  cat > scripts/generate-jwt.sh << 'EOF'
 1728  #!/bin/bash
 1729  # Este script genera tokens JWT para pruebas
 1730  # Requiere jq y openssl
 1731  # Generar clave privada temporal si no existe
 1732  if [ ! -f /tmp/private_key.pem ]; then
 1733    openssl genrsa -out /tmp/private_key.pem 2048
 1734    openssl rsa -in /tmp/private_key.pem -pubout -out /tmp/public_key.pem
 1735  fi
 1736  # Crear header
 1737  header=$(echo -n '{"alg":"RS256","typ":"JWT","kid":"test-key"}' | base64 | tr -d '=' | tr '/+' '_-')
 1738  # Crear payload
 1739  now=$(date +%s)
 1740  exp=$((now + 3600))
 1741  payload=$(cat <<EOF
 1742  {
 1743    "sub": "test-user",
 1744    "iat": $now,
 1745    "exp": $exp,
 1746    "iss": "test-issuer",
 1747    "aud": "test-audience",
 1748    "realm_access": {
 1749      "roles": ["user", "admin"]
 1750    }
 1751  }
 1752  EOF
 1753  )
 1754  encoded_payload=$(echo -n "$payload" | base64 | tr -d '=' | tr '/+' '_-')
 1755  # Crear signature
 1756  signature_data="${header}.${encoded_payload}"
 1757  signature=$(echo -n "$signature_data" | openssl dgst -sha256 -sign /tmp/private_key.pem | base64 | tr -d '=' | tr '/+' '_-')
 1758  # Token completo
 1759  token="${header}.${encoded_payload}.${signature}"
 1760  echo "Token JWT para pruebas:"
 1761  echo "$token"
 1762  EOF
 1763  chmod +x scripts/generate-jwt.sh
 1764  cd ..
 1765  clelar
 1766  clear
 1767  git clone https://github.com/zascontab/krankend.git
 1768  ls
 1769  cd krankend/
 1770  cd ..
 1771  cp -rf krankend/.git krakend-project
 1772  sudo apt-get install tree
 1773  curl -X POST http://localhost:8080/api/whatsapp/webhook   -H "Content-Type: application/json"   -d '{
 1774      "messageId": "TEST12345678",
 1775      "sender": "593983606090@s.whatsapp.net",
 1776      "pushName": "Usuario",
 1777      "timestamp": 1744178783,
 1778      "type": "text",
 1779      "content": "Hola, necesito información",
 1780      "mediaUrl": null
 1781    }'
 1782  clear
 1783  curl -X POST http://localhost:8080/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1784      "phone": "+593983606090",
 1785      "message": "Este es un mensaje de prueba enviado manualmente"
 1786    }'
 1787  curl -X POST http://localhost:7081/api/whatsapp/webhook   -H "Content-Type: application/json"   -d '{
 1788      "messageId": "TEST12345678",
 1789      "sender": "593983606090@s.whatsapp.net",
 1790      "pushName": "Usuario",
 1791      "timestamp": 1744178783,
 1792      "type": "text",
 1793      "content": "Hola, necesito información",
 1794      "mediaUrl": null
 1795    }'
 1796  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1797      "phone": "+593983606090",
 1798      "message": "Este es un mensaje de prueba enviado manualmente"
 1799    }'
 1800  curl -X POST http://localhost:8086/api/v1/conversation   -H "Content-Type: application/json"   -d '{"text": "Hola", "session_id": "test-session", "language": "es", "data": {"forceMode": "customer_service"}, "agent_id": 1}'
 1801  claar
 1802  clear
 1803  curl -X POST http://localhost:8086/api/v1/conversation   -H "Content-Type: application/json"   -d '{"text": "Hola", "session_id": "test-session", "language": "es", "data": {"forceMode": "customer_service"}, "agent_id": 1}'
 1804  curl -X POST http://localhost:8089/api/messages/send-message   -H "Content-Type: application/json"   -d '{"phone": "+593983606090", "message": "Prueba directa"}'
 1805  curl -X POST http://localhost:8089/send-otp   -H "Content-Type: application/json"   -d '{"phone": "+593983606090", "message": "Prueba directa"}'
 1806  clear
 1807  curl -X POST http://localhost:8089/api/messages/send-message   -H "Content-Type: application/json"   -d '{"phone": "+593983606090", "message": "Prueba directa"}'
 1808  curl -X POST http://localhost:8089/api/messages/send-message   -H "Content-Type: application/json"   -d '{"phone": "+593983606090", "message": "Prueba directa"}'
 1809  curl -X POST http://localhost:8089/send-otp   -H "Content-Type: application/json"   -d '{"phone": "+593983606090", "message": "Prueba directa"}'
 1810  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1811      "phone_number": "+593983606090",
 1812      "user_id": 1,
 1813      "purpose": "login",
 1814      "channel": "whatsapp"
 1815    }'
 1816  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1817      "phone_number": "+593983606090",
 1818      "user_id": 1,
 1819      "purpose": "login",
 1820      "channel": "whatsapp"
 1821    }'
 1822  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1823      "phone_number": "+593983606090",
 1824      "user_id": 1,
 1825      "purpose": "login",
 1826      "channel": "whatsapp"
 1827    }'
 1828  curl -X POST http://localhost:8089/send-otp   -H "Content-Type: application/json"   -d '{
 1829      "phone_number": "+593983606090",
 1830      "user_id": 1,
 1831      "purpose": "login",
 1832      "channel": "whatsapp"
 1833    }'
 1834  curl -X POST http://localhost:8089/send-otp \st:8089/send-otp   -H "Content-Type: application/json"   -d '{
 1835      "phone_number": "+593983606090",
 1836      "user_id": 1,
 1837      "purpose": "login",
 1838      "channel": "whatsapp"
 1839    }'
 1840  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1841      "phone_number": "+593983606090",
 1842      "user_id": 1,
 1843      "purpose": "login",
 1844      "channel": "whatsapp"
 1845    }'
 1846  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1847      "phone_number": "+593983606090",
 1848      "user_id": 1,
 1849      "purpose": "login",
 1850      "channel": "whatsapp"
 1851    }'
 1852  # Prueba el endpoint de envío de mensajes
 1853  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1854      "phone_number": "+593983606090",
 1855      "user_id": 1,
 1856      "message": "Mensaje de prueba",
 1857      "channel": "whatsapp"
 1858    }'
 1859  # Prueba el endpoint de envío de mensajes
 1860  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1861      "phone_number": "+593983606090",
 1862      "user_id": 1,
 1863      "message": "Mensaje de prueba",
 1864      "channel": "whatsapp"
 1865    }'
 1866  # Prueba el endpoint de envío de mensajes
 1867  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1868      "phone_number": "+593983606090",
 1869      "user_id": 1,
 1870      "message": "Mensaje de prueba",
 1871      "channel": "whatsapp"
 1872    }'
 1873  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1874      "phone_number": "+593983606090",
 1875      "user_id": 1,
 1876      "message": "Mensaje de prueba",
 1877      "channel": "whatsapp"
 1878    }'
 1879  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1880      "phone_number": "+593983606090",
 1881      "user_id": 1,
 1882      "purpose": "login",
 1883      "channel": "whatsapp"
 1884    }'
 1885  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1886      "phone_number": "+593983606090",
 1887      "user_id": 1,
 1888      "purpose": "login",
 1889      "channel": "whatsapp"
 1890    }'
 1891  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1892      "phone_number": "+593983606090",
 1893      "user_id": 1,
 1894      "purpose": "login",
 1895      "channel": "whatsapp"
 1896    }'
 1897  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1898      "phone_number": "+593983606090",
 1899      "user_id": 1,
 1900      "purpose": "login",
 1901      "channel": "whatsapp"
 1902    }'
 1903  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1904      "phone_number": "+593983606090",
 1905      "user_id": 1,
 1906      "purpose": "login",
 1907      "channel": "whatsapp"
 1908    }'
 1909  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1910      "phone_number": "+593983606090",
 1911      "user_id": 1,
 1912      "purpose": "login",
 1913      "channel": "whatsapp"
 1914    }'
 1915  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1916      "phone_number": "+593983606090",
 1917      "user_id": 1,
 1918      "purpose": "login",
 1919      "channel": "whatsapp"
 1920    }'
 1921  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1922      "phone_number": "+593983606090",
 1923      "user_id": 1,
 1924      "purpose": "login",
 1925      "channel": "whatsapp"
 1926    }'
 1927  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1928      "phone_number": "+593983606090",
 1929      "user_id": 1,
 1930      "purpose": "login",
 1931      "channel": "whatsapp"
 1932    }'
 1933  clear
 1934  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1935      "phone_number": "+593983606090",
 1936      "user_id": 1,
 1937      "purpose": "login",
 1938      "channel": "whatsapp"
 1939    }'
 1940  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1941      "phone_number": "+593983606090",
 1942      "user_id": 1,
 1943      "purpose": "login",
 1944      "channel": "whatsapp"
 1945    }'
 1946  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
    "phone_number": "+593983606090",
    "user_id": 1,
    "message": "Mensaje de prueba",
    "channel": "whatsapp"
  }'
 1947  curl -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
 1948  curl -v -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
    "phone": "+593983606090",
    "message": "Mensaje de prueba enviado a través de KrakenD"
  }'
 1949  curl -v -X POST http://localhost:7081/api/whatsapp/send-message   -H "Content-Type: application/json"   -d '{
    "phone_number": "+593983606090",
    "user_id": 1,
    "purpose": "login",
    "channel": "whatsapp"
  }'
 1950  history > comandos.log
